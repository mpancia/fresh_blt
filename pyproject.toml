[project]
name = "fresh_blt"
description = "A CLI tool to parse and convert Opavote .blt ranked choice voter files."
authors = [{ name = "Matt Pancia", email = "msp@themsp.org" }]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11,<4.0"
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "lark>=1.2.2",
    "pandas>=2.3.1",
    "pydantic>=2.11.7",
    "typer>=0.15.0",
    "rich>=14.0.0",
    "faker>=37.6.0",
]

[project.urls]
Repository = "https://github.com/mpancia/fresh_blt"

[project.scripts]
fresh_blt = "fresh_blt.cli:main"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-sugar>=1.0.0",
    "ruff>=0.11.9",
    "codespell>=2.4.1",
    "basedpyright>=1.29.1",
    "funlog>=0.2.1",
    "ty>=0.0.1a18",
    "ipython>=9.4.0",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = true

[tool.hatch.build.targets.wheel]
packages = ["src/fresh_blt"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "I",  # isort
]
ignore = [
    "E501", # line-too-long, handled by formatter
    "E402", # module-import-not-at-top-of-file
    "E731", # lambda-assignment
    # Rules that conflict with ruff formatter
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC002",
]

[tool.basedpyright]
include = ["src", "tests", "devtools"]
reportIgnoreCommentWithoutRule = false
reportUnnecessaryTypeIgnoreComment = false
reportMissingTypeStubs = false
reportUnusedCallResult = false
reportAny = false
reportExplicitAny = false
reportImplicitStringConcatenation = false
reportUnreachable = false

[tool.codespell]
# ignore-words-list = "foo,bar"
# skip = "foo.py,bar.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
